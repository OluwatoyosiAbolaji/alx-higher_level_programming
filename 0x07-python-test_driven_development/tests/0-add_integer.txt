The `add integer` test

=======================================================
Using function add_integer from the 0-add_integer module
-------------------------------------------------------
The examples are as follows

=========================================================
>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 2)
3
>>> add_integer(1, -3)
-2
>>> add_integer(-1, 4)
3
>>> add_integer(-2, -5)
-7
>>> add_integer(10.2, 2)
12
>>> add_integer(2, 7.5)
9
>>> add_integer(3.9, 8.6)
11
>>> add_integer(3.0, 7.5)
10
>>> add_integer("string", 10)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(11, "string")
Traceback (most recent call last):
    ...
TypeError: b must be an integer
>>> add_integer(True, 10)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(False, 10)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(5, True)
Traceback (most recent call last):
    ...
TypeError: b must be an integer
>>> add_integer(5, False)
Traceback (most recent call last):
    ...
TypeError: b must be an integer
>>> add_integer(True, False)
Traceback (most recent call last):
    ...
TypeError: a must be an integer
>>> add_integer(1e3000000, 1e20000)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer
>>> add_integer(1e3000000, 10)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer
>>> add_integer(10, 1e20000)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer
>>> add_integer(10)
108
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'
>>> add_integer(None)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

